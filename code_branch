import datetime

class Book:
    def __init__(self, title, author, isbn):
        self.title = title
        self.author = author
        self.isbn = isbn
        self.available = True

    def __str__(self):
        return f"{self.title} by {self.author} (ISBN: {self.isbn})"
class User:
    def __init__(self, name, user_id):
        self.name = name
        self.user_id = user_id
        self.borrowed_books = []

    def borrow_book(self, book):
        if book.available:
            book.available = False
            self.borrowed_books.append((book, datetime.date.today()))
            print(f"{self.name} borrowed {book.title}")
        else:
            print(f"{book.title} is not available for borrowing.")

    def return_book(self, book):
        for borrowed_book, borrow_date in self.borrowed_books:
            if borrowed_book == book:
                book.available = True
                self.borrowed_books.remove((book, borrow_date))
                print(f"{self.name} returned {book.title}")
                return
        print(f"{self.name} does not have {book.title} to return.")

    def __str__(self):
        return f"User: {self.name} (ID: {self.user_id})"


class Library:
    def __init__(self):
        self.books = []
        self.users = []

    def add_book(self, book):
        self.books.append(book)
        print(f"Added book: {book}")

    def register_user(self, user):
        self.users.append(user)
        print(f"Registered user: {user}")

    def display_books(self):
        print("Library Books:")
        for book in self.books:
            status = "Available" if book.available else "Checked out"
            print(f"{book} - {status}")


# Example Usage
library = Library()

book1 = Book("The Great Gatsby", "F. Scott Fitzgerald", "123456789")
book2 = Book("To Kill a Mockingbird", "Harper Lee", "987654321")

library.add_book(book1)
library.add_book(book2)

user1 = User("Alice", 1)
user2 = User("Bob", 2)

library.register_user(user1)
library.register_user(user2)

user1.borrow_book(book1)
library.display_books()

user1.return_book(book1)
library.display_books()
